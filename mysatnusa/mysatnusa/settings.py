"""
Django settings for mysatnusa project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

import os
import environ

env = environ.Env(
    DEBUG=(bool, False)
)
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# [END] Setting DB


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')
LARAVEL_SECRET_KEY = 'xO8Kx8D4idTBbsriod3TaqeOWEbRvt5026YoMlvgxJHx9cTE7iC8qowp1EPlVGbk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['localhost', '127.0.0.1']
# Change this, to when deployed to production
JWT_AUTH_EXPIRY = 12000 # in minutes, 



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'django_security',
    # 'example',    
    'corsheaders',
    'rest_framework',
    'drf_yasg',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'mysatnusa.middleware.JsonErrorMiddleware',
    # 'django_security.middleware.ContentSecurityPolicyMiddleware',  # CSP protection
    # 'django_security.middleware.XFrameOptionsMiddleware',  # Clickjacking protection
    # 'django_security.middleware.ReferrerPolicyMiddleware',  # Referrer policy protection
]

ROOT_URLCONF = 'mysatnusa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysatnusa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# postgre
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'website',
        'USER': 'avnadmin',
        'PASSWORD': 'AVNS_SLIAlOehTnmdpZrhnNN',
        'HOST': 'e-ticketing-e-ticketing.g.aivencloud.com',
        'PORT': '13345',
        'OPTIONS': {
            'sslmode': 'require',  # hanya jika Aiven perlu SSL
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = [
    "http://localhost",
]

CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

CORS_EXPOSE_HEADERS = ['Content-Disposition']
CORS_ALLOW_ALL_ORIGINS = True

# django_security
# SECURE_HSTS_SECONDS = 3600  # waktu dalam detik (1 jam)
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # termasuk subdomain
# SECURE_HSTS_PRELOAD = True  # preload HSTS untuk browser

# CSP_DEFAULT_SRC = ("'self'",)  # hanya mengizinkan konten dari domain sendiri

# X_FRAME_OPTIONS = 'DENY'  # mencegah semua iframe

# SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'

# SECURE_SSL_REDIRECT = True  # mengalihkan HTTP ke HTTPS

# SECURITY_AUDIT_LOG_ENABLED = True
# SECURITY_AUDIT_LOG_BACKEND = 'django_security.log.backends.DatabaseBackend'

APPEND_SLASH = False

# django_security
MIDDLEWARE += ['csp.middleware.CSPMiddleware']
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_HSTS_SECONDS = 3600  # waktu dalam detik (1 jam)
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # termasuk subdomain
SECURE_HSTS_PRELOAD = True  # preload HSTS untuk browser
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSP_DEFAULT_SRC = ("'self'",)  # hanya mengizinkan konten dari domain sendiri
CSP_SCRIPT_SRC = ("'self'", "'unsafe-inline'")
X_FRAME_OPTIONS = 'DENY'  # mencegah semua iframe
SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'
SECURITY_AUDIT_LOG_ENABLED = True
SECURITY_AUDIT_LOG_BACKEND = 'django_security.log.backends.DatabaseBackend' 